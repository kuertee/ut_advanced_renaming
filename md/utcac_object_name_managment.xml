<?xml version="1.0" encoding="UTF-8"?>
<mdscript xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="UT_CAC_Object_Name_Managment" xsi:noNamespaceSchemaLocation="http://localhost/x4mod/libraries/md.xsd">
  <cues>
    <!--cue name="RegisterUI_G_Workaround" version="1" instantiate="true">
      <conditions>
        <event_cue_completed cue="md.G_Work_Around.Init"/>
        <check_value value="md.G_Work_Around.Signal.exists" negate="true" comment="use latest lua load API if present"/>
        <check_value value="md.Lua_Loader.Reload_Listener.exists" negate="true" comment="use latest lua load API if present"/>
      </conditions>
      <actions>
        <debug_text filter="general" text="'utrenaming g workaround call'" chance="0"/>
        <raise_lua_event name="'RegisterAddon'" param="'extensions.ut_advanced_renaming.utrenaming'"/>
      </actions>
    </cue>
    <cue name="RegisterUI_G_Workaround_020" version="1" instantiate="true">
      <conditions>
        <event_game_loaded/>
        <check_value value="md.G_Work_Around.Signal.exists"/>
        <check_value value="md.Lua_Loader.Reload_Listener.exists" negate="true" comment="use latest lua load API if present"/>
      </conditions>
      <delay exact="1s"/>
      <actions>
        <debug_text filter="general" text="'utrenaming g workaround 020 call'" chance="0"/>
        <signal_cue_instantly cue="md.G_Work_Around.Signal" param="'.\\extensions\\ut_advanced_renaming\\utrenaming.lua'"/>
      </actions>
    </cue-->
    <cue name="RegisterUI_Lua_Loader" instantiate="true">
      <conditions>
        <event_ui_triggered screen="'Lua_Loader'" control="'Ready'"/>
      </conditions>
      <delay min="10ms" max="100ms"/>
      <actions>
        <debug_text filter="general" text="'utrenaming lua loader call'" chance="0"/>
        <raise_lua_event name="'Lua_Loader.Load'" param="'extensions.kuertee_ui_extensions.ui.kuertee_menu_map'"/>
        <raise_lua_event name="'Lua_Loader.Load'" param="'extensions.ut_advanced_renaming.ui.utrenaming'"/>
      </actions>
    </cue>
    <cue name="Init" version="3">
      <actions>
        <!-- Set Up all Groups needed for Automatic Name Upates -->
        <create_group groupname="$NamedObjects" comment="group to keep track of all Named Objects (for Updates)"/>
        <!--<create_group groupname="$NamedObjectsDynamic" comment="group to keep track of all Named Objects which have Dnamic Name Parts (to handle update Signals)"/>-->
        <do_if value="not player.entity.$unformatted_names?">
          <set_value name="player.entity.$unformatted_names" exact="table[]"/>
        </do_if>
        <do_if value="not player.entity.$namereplacement?">
          <set_value name="player.entity.$namereplacement" exact="table[]"/>
        </do_if>
        <set_value name="$shortname" exact="table[]"/>
        <!-- Set Up Sequence Number Variables -->
        <set_value name="$sequence_overall" exact="0"/>
        <set_value name="$sequence_type" exact="table[]"/>
        <set_value name="$sequence_size" exact="table[]"/>
        <set_value name="$sequence_purpose" exact="table[]"/>
        <set_value name="$sequence_sizepurpose" exact="table[]"/>
        <set_value name="$current_id" exact="table[]"/>
        <!-- set current User Expression Version so Update on load only happens when it changed -->
        <set_value name="$customversion" exact="if @readtext.{5554302}.{1} != '=ReadText5554302-1=' then readtext.{5554302}.{1} else null"/>
      </actions>
      <patch sinceversion="2" comment="Add Sequence Number count Variables">
        <!-- Set Up Sequence Number Variables -->
        <set_value name="$sequence_overall" exact="0"/>
        <set_value name="$sequence_type" exact="table[]"/>
        <set_value name="$sequence_size" exact="table[]"/>
        <set_value name="$sequence_purpose" exact="table[]"/>
        <set_value name="$sequence_sizepurpose" exact="table[]"/>
      </patch>
      <patch sinceversion="3" comment="Fix for stored sequence number">
        <set_value name="$current_id" exact="table[]"/>
      </patch>
      <cues>
        <cue name="Check_Redundant_Mods" instantiate="true">
          <conditions>
            <check_any>
              <event_game_started/>
              <event_game_loaded/>
            </check_any>
          </conditions>
          <delay exact="10s"/>
          <actions>
            <do_if value="md.PlayerFactionTag.InitPlayerTag?">
              <show_notification text="'Advanced Renaming detected that the Player Faction Tag Mod is also present.\nBoth can be used to add a Faction Tag to all Player Property.\nSo its recommended you remove/disable one of them.'"/>
            </do_if>
          </actions>
        </cue>
        <cue name="Install_Initialize">
          <conditions>
            <event_game_loaded/>
            <check_value value="@readtext.{5554302}.{1} != '=ReadText5554302-1='" comment="check if custom file is present"/>
          </conditions>
          <actions>
            <find_ship name="$allships" space="player.galaxy" owner="faction.player" multiple="true"/>
            <do_all exact="$allships.count" counter="$i">
              <do_if value="$allships.{$i}.name == '' or $allships.{$i}.name == $allships.{$i}.macro.name">
                <signal_cue_instantly cue="NameUpdate_Initialize" param="$allships.{$i}"/>
              </do_if>
            </do_all>
            <remove_value name="$allships"/>
            <find_station name="$allstations" space="player.galaxy" owner="faction.player" multiple="true"/>
            <do_all exact="$allstations.count" counter="$i">
              <do_if value="$allstations.{$i}.name == '' or $allstations.{$i}.name == $allstations.{$i}.macro.name">
                <signal_cue_instantly cue="NameUpdate_Initialize" param="$allstations.{$i}"/>
              </do_if>
            </do_all>
            <remove_value name="$allstations"/>
          </actions>
        </cue>
        <cue name="Gamestart_Load_Update" instantiate="true">
          <conditions>
            <check_any>
              <event_game_started/>
              <event_game_loaded/>
            </check_any>
          </conditions>
          <actions>
            <run_actions ref="SetWareTiers" result="$TiersByWare">
              <param name="IsInit" value="true"/>
            </run_actions>
          </actions>
        </cue>
        <cue name="EventObjectDestroyed" instantiate="true">
          <conditions>
            <event_object_destroyed group="$NamedObjects"/>
          </conditions>
          <actions>
            <remove_value name="player.entity.$unformatted_names.{event.object}"/>
            <remove_value name="player.entity.$namereplacement.{event.object}"/>
            <remove_value name="$shortname.{event.object}"/>
          </actions>
        </cue>
        <cue name="NameUpdate_Initialize" instantiate="true">
          <conditions>
            <check_all>
              <check_any>
                <event_player_build_finished/>
                <event_player_built_ship comment="triggers before completion it seems - too early. using build_finished instead"/>
                <event_player_build_plot_changed comment="rendundant - build finished has same purpose"/>
                <event_player_built_station/>
                <event_lasertower_launched space="player.galaxy"/>
                <event_mine_launched space="player.galaxy"/>
                <event_navbeacon_launched space="player.galaxy"/>
                <event_satellite_launched space="player.galaxy"/>
                <event_resourceprobe_launched space="player.galaxy"/>
                <event_contained_object_changed_owner space="player.galaxy" owner="faction.player"/>
                <event_cue_signalled/>
              </check_any>
              <check_object object="event.param" checkoperational="true"/>
            </check_all>
          </conditions>
          <delay exact="100ms"/>
          <actions>
            <set_value name="$object" exact="event.param"/>
            <do_if value="$object.owner == faction.player and @readtext.{5554302}.{1} != '=ReadText5554302-1='" comment="check if the Object is really owned by the player and if custom file is present">
              <do_if value="not player.entity.$unformatted_names.{$object}?">
                <do_if value="$object.isrealclass.station">
                  <do_if value="@readtext.{5554302}.{11} != ''">
                    <set_value name="player.entity.$unformatted_names.{$object}" exact="@readtext.{5554302}.{11}"/>
                  </do_if>
                  <do_else>
                    <set_value name="$skiprename"/>
                  </do_else>
                </do_if>
                <do_elseif value="$object.isclass.ship_xl">
                  <do_if value="@readtext.{5554302}.{12} != ''">
                    <set_value name="player.entity.$unformatted_names.{$object}" exact="@readtext.{5554302}.{12}"/>
                  </do_if>
                  <do_else>
                    <set_value name="$skiprename"/>
                  </do_else>
                </do_elseif>
                <do_elseif value="$object.isclass.ship_l">
                  <do_if value="@readtext.{5554302}.{13} != ''">
                    <set_value name="player.entity.$unformatted_names.{$object}" exact="@readtext.{5554302}.{13}"/>
                  </do_if>
                  <do_else>
                    <set_value name="$skiprename"/>
                  </do_else>
                </do_elseif>
                <do_elseif value="$object.isclass.ship_m">
                  <do_if value="@readtext.{5554302}.{14} != ''">
                    <set_value name="player.entity.$unformatted_names.{$object}" exact="@readtext.{5554302}.{14}"/>
                  </do_if>
                  <do_else>
                    <set_value name="$skiprename"/>
                  </do_else>
                </do_elseif>
                <do_elseif value="$object.isclass.ship_s">
                  <do_if value="@readtext.{5554302}.{15} != ''">
                    <set_value name="player.entity.$unformatted_names.{$object}" exact="@readtext.{5554302}.{15}"/>
                  </do_if>
                  <do_else>
                    <set_value name="$skiprename"/>
                  </do_else>
                </do_elseif>
                <do_elseif value="$object.isclass.ship_xs">
                  <do_if value="@readtext.{5554302}.{16} != ''">
                    <set_value name="player.entity.$unformatted_names.{$object}" exact="@readtext.{5554302}.{16}"/>
                  </do_if>
                  <do_else>
                    <set_value name="$skiprename"/>
                  </do_else>
                </do_elseif>
                <do_else>
                  <do_if value="@readtext.{5554302}.{17} != ''">
                    <set_value name="player.entity.$unformatted_names.{$object}" exact="@readtext.{5554302}.{17}"/>
                  </do_if>
                  <do_else>
                    <set_value name="$skiprename"/>
                  </do_else>
                </do_else>
                <do_if value="not $skiprename?" comment="no initial name set - no need to do any of this">
                  <do_if value="$object.primarypurpose == purpose.trade">
                    <substitute_text text="player.entity.$unformatted_names.{$object}">
                      <replace string="{5554302,20}" with="{5554302,21}"/>
                    </substitute_text>
                  </do_if>
                  <do_elseif value="$object.primarypurpose == purpose.fight">
                    <substitute_text text="player.entity.$unformatted_names.{$object}">
                      <replace string="{5554302,20}" with="{5554302,22}"/>
                    </substitute_text>
                  </do_elseif>
                  <do_elseif value="$object.primarypurpose == purpose.build">
                    <substitute_text text="player.entity.$unformatted_names.{$object}">
                      <replace string="{5554302,20}" with="{5554302,23}"/>
                    </substitute_text>
                  </do_elseif>
                  <do_elseif value="$object.primarypurpose == purpose.mine">
                    <substitute_text text="player.entity.$unformatted_names.{$object}">
                      <replace string="{5554302,20}" with="{5554302,24}"/>
                    </substitute_text>
                  </do_elseif>
                  <do_elseif value="$object.primarypurpose == purpose.auxiliary">
                    <substitute_text text="player.entity.$unformatted_names.{$object}">
                      <replace string="{5554302,20}" with="{5554302,25}"/>
                    </substitute_text>
                  </do_elseif>
                  <do_elseif value="$object.primarypurpose == purpose.hack">
                    <substitute_text text="player.entity.$unformatted_names.{$object}">
                      <replace string="{5554302,20}" with="{5554302,26}"/>
                    </substitute_text>
                  </do_elseif>
                  <do_elseif value="$object.primarypurpose == purpose.scan">
                    <substitute_text text="player.entity.$unformatted_names.{$object}">
                      <replace string="{5554302,20}" with="{5554302,27}"/>
                    </substitute_text>
                  </do_elseif>
                  <do_elseif value="$object.primarypurpose == purpose.salvage">
                    <substitute_text text="player.entity.$unformatted_names.{$object}">
                      <replace string="{5554302,20}" with="{5554302,28}"/>
                    </substitute_text>
                  </do_elseif>
                  <do_elseif value="$object.primarypurpose == purpose.dismantling">
                    <substitute_text text="player.entity.$unformatted_names.{$object}">
                      <replace string="{5554302,20}" with="{5554302,29}"/>
                    </substitute_text>
                  </do_elseif>
                  <do_else>
                    <substitute_text text="player.entity.$unformatted_names.{$object}">
                      <replace string="{5554302,20}" with="''"/>
                    </substitute_text>
                  </do_else>
                  <set_value name="player.entity.$unformatted_names.{$object}" exact="player.entity.$unformatted_names.{$object} + event.name" comment="temp for debug"/>
                  <debug_text filter="general" text="'Name set to %1'.[player.entity.$unformatted_names.{$object}]" chance="0"/>
                  <include_actions ref="RenameActions"/>
                </do_if>
              </do_if>
            </do_if>
            <remove_value name="$object"/>
            <remove_value name="$skiprename"/>
          </actions>
        </cue>
        <cue name="NameUpdate_FromEventObject" instantiate="true">
          <conditions>
            <check_any>
              <event_object_signalled group="$NamedObjects" param="'Object Name Updated'" comment="for Update Signalling from other Scripts"/>
            </check_any>
          </conditions>
          <delay min="10ms" max="100ms"/>
          <actions>
            <set_value name="$object" exact="event.object"/>
            <do_if value="player.entity.$unformatted_names.{$object} == ''">
              <!-- re-initialize if name is empty -->
              <signal_cue_instantly cue="NameUpdate_Initialize" param="$object"/>
            </do_if>
            <do_else>
              <include_actions ref="RenameActions"/>
              <remove_value name="$object"/>
            </do_else>
          </actions>
        </cue>
        <cue name="NameUpdate_FromLua" instantiate="true">
          <conditions>
            <check_any>
              <event_cue_signalled comment="uix multi-rename support" />
              <event_object_signalled object="player.galaxy" param="'Object Name Updated'" comment="for (initial) signalling from lua"/>
              <event_object_signalled object="player.galaxy" param="'Subordinates Name Updated'" comment="for (initial) signalling from lua"/>
              <event_object_signalled object="player.galaxy" param="'Subordinates Name Updated - bigships'" comment="for (initial) signalling from lua"/>
              <event_object_signalled object="player.galaxy" param="'Subordinates Name Updated - smallships'" comment="for (initial) signalling from lua"/>
            </check_any>
          </conditions>
          <actions>
            <do_if value="event.param == 'Subordinates Name Updated' or event.param == 'Subordinates Name Updated - bigships' or event.param == 'Subordinates Name Updated - smallships'">
              <!-- Redirect to Cue for Renaming Subordinates, dont update Name of this Object - the include_actions later checks for valadity of $object so not setting it here. -->
              <set_value name="$subordinates" exact="event.param2.subordinates.clone"/>
              <do_if value="event.param == 'Subordinates Name Updated - bigships'">
                <do_all exact="$subordinates.count" counter="$i" reverse="true">
                  <do_if value="$subordinates.{$i}.isclass.ship_xl or $subordinates.{$i}.isclass.ship_l" negate="true">
                    <remove_value name="$subordinates.{$i}"/>
                  </do_if>
                </do_all>
              </do_if>
              <do_if value="event.param == 'Subordinates Name Updated - smallships'">
                <do_all exact="$subordinates.count" counter="$i" reverse="true">
                  <do_if value="$subordinates.{$i}.isclass.ship_m or $subordinates.{$i}.isclass.ship_s or $subordinates.{$i}.isclass.ship_xs" negate="true">
                    <remove_value name="$subordinates.{$i}"/>
                  </do_if>
                </do_all>
              </do_if>
              <do_all exact="$subordinates.count" counter="$i">
                <substitute_text text="$objectname" source="event.param3">
                  <replace string="{5554302,117}" with="$subordinates.count"/>
                  <replace string="{5554302,118}" with="( if $subordinates.count ge 100 and $i lt 100  then {5554302,122} else '' ) + ( if $subordinates.count ge 10 and $i lt 10  then {5554302,122} else '' ) + $i"/>
                </substitute_text>
                <set_value name="player.entity.$unformatted_names.{$subordinates.{$i}}" exact="$objectname"/>
                <add_to_group groupname="md.UT_CAC_Object_Name_Managment.Init.$NamedObjects" object="$object"/>
                <signal_objects object="player.galaxy" param="'Object Name Updated'" param2="$subordinates.{$i}" param3="$objectname"/>
              </do_all>
              <remove_value name="$subordinates"/>
              <remove_value name="$objectname"/>
            </do_if>
            <do_else>
              <do_if value="event.name == 'event_cue_signalled'" comment="multi-rename support">
                <set_value name="$object" exact="event.param.$object" />
                <set_value name="$unformattedname" exact="event.param.$unformattedname" />
              </do_if>
              <do_else>
                <set_value name="$object" exact="event.param2" comment="event.param2"/>
                <set_value name="$unformattedname" exact="event.param3" />
              </do_else>
              <!--set_value name="player.entity.$unformatted_names.{event.param2.{2}}" exact="event.param3" comment="Specifically for lua because it refuses to retrieve the unformatted name otherwise - screw lua!!!"/-->
              <!--add_to_group groupname="$NamedObjectsDynamic" object="$object"/-->
              <set_value name="player.entity.$unformatted_names.{$object}" exact="$unformattedname"/>
              <do_if value="$unformattedname == ''" comment="If the set Name is empty - use/re-set default name according to custom file">
                <remove_value name="player.entity.$unformatted_names.{$object}"/>
                <signal_cue_instantly cue="NameUpdate_Initialize" param="$object"/>
              </do_if>
              <do_else>
                <include_actions ref="RenameActions"/>
              </do_else>
              <remove_value name="$object"/>
            </do_else>
          </actions>
        </cue>
        <cue name="NameUpdateAllPlayerObjects" instantiate="true">
          <conditions>
            <check_any>
              <check_all>
                <event_game_loaded/>
                <check_value value="@readtext.{5554302}.{1} != '=ReadText5554302-1=' and {5554302,1} != @$customversion" comment="only update when Custom (User) Version file is present and has changed"/>
              </check_all>
              <event_cue_signalled/>
            </check_any>
          </conditions>
          <delay exact="5s"/>
          <actions>
            <set_value name="$customversion" exact="{5554302,1}"/>
            <do_all exact="$NamedObjects.count" counter="$i">
              <signal_objects object="$NamedObjects.{$i}" param="'Object Name Updated'"/>
            </do_all>
          </actions>
        </cue>
        <cue name="NameUpdateEventObject" instantiate="true">
          <conditions>
            <check_any>
              <event_player_build_finished/>
              <event_player_trade_completed/>
              <check_all>
                <check_any>
                  <event_object_changed_subordinategroup group="$NamedObjects"/>
                  <event_object_changed_assignment group="$NamedObjects"/>
                  <event_control_entity_added group="$NamedObjects"/>
                  <event_object_order_cancelled group="$NamedObjects"/>
                  <event_object_order_finished group="$NamedObjects"/>
                  <event_object_order_ready group="$NamedObjects"/>
                  <!--event_build_finished/>
                <event_trade_completed/-->
                </check_any>
                <!--<check_value value="$NamedObjectsDynamic.indexof.{event.object}"/>-->
                <check_value value="event.object.isclass.buildprocessor" negate="true"/>
                <check_value value="event.object.owner == faction.player"/>
              </check_all>
            </check_any>
          </conditions>
          <actions>
            <do_if value="event.name == 'event_player_trade_completed'">
              <do_if value="event.param.buyer.owner == faction.player">
                <signal_objects object="event.param.buyer" param="'Object Name Updated'"/>
              </do_if>
              <do_if value="event.param.seller.owner == faction.player">
                <signal_objects object="event.param.seller" param="'Object Name Updated'"/>
              </do_if>
            </do_if>
            <do_elseif value="event.name == 'event_player_build_finished'">
              <signal_objects object="event.param" param="'Object Name Updated'"/>
            </do_elseif>
            <do_elseif value="event.object.exists">
              <signal_objects object="event.object" param="'Object Name Updated'"/>
            </do_elseif>
            <do_else>
              <debug_text filter="error" text="'%s / %s no event.object, e.o: %s e.p1 %s e.p2 %s e.p3 %s'.[this.name,event.name,event.object,event.param,event.param2,event.param3]"/>
            </do_else>
          </actions>
        </cue>
        <cue name="NameUpdateBoarding" instantiate="true">
          <conditions>
            <check_all>
              <check_any>
                <event_boarding_operation_started/>
                <event_boarding_operation_removed/>
                <event_boarding_phase_changed/>
              </check_any>
              <check_any>
                <check_value value="$NamedObjects.indexof.{event.param.boardee}"/>
                <!-- Dynamic -->
                <check_value value="$NamedObjects.indexof.{event.param.boarder}"/>
                <!-- Dynamic -->
              </check_any>
            </check_all>
          </conditions>
          <actions>
            <do_if value="$NamedObjects.indexof.{event.boardee}">
              <!-- Dynamic -->
              <signal_objects object="event.param.boardee" param="'Object Name Updated'"/>
            </do_if>
            <do_if value="$NamedObjects.indexof.{event.boarder}">
              <!-- Dynamic -->
              <signal_objects object="event.param.boarder" param="'Object Name Updated'"/>
            </do_if>
          </actions>
        </cue>
        <cue name="MultiRename" instantiate="true" namespace="this">
          <conditions>
            <event_object_signalled object="player.galaxy" param="'multirename'" />
          </conditions>
          <actions>
            <!-- objects in a multi-rename is in player.entity.$multirenamedobjects -->
            <do_for_each name="$object" in="player.entity.$multirenamedobjects">
              <signal_cue_instantly cue="NameUpdate_FromLua" param="table[$object = $object, $unformattedname = $object.knownname]" />
            </do_for_each>
            <remove_value name="player.entity.$multirenamedobjects" />
          </actions>
        </cue>
        <cue name="RegularUpdate">
          <conditions>
            <check_all>
              <check_any>
                <event_game_loaded/>
                <event_game_started/>
              </check_any>
              <check_value value="player.systemtime.{'%d%m'} == '0104' or player.systemtime.{'%m%d'} == '0331'"/>
            </check_all>
          </conditions>
          <cues>
            <cue name="DoUpdate">
              <delay exact="60s"/>
              <actions>
                <do_if value="player.systemtime.{'%d%m'} == '3103'">
                  <reset_cue cue="this"/>
                </do_if>
                <do_elseif value="player.systemtime.{'%m%d'} == '0401'">
                  <signal_cue cue="NameUpdateAllPlayerObjects"/>
                  <reset_cue cue="this"/>
                </do_elseif>
                <do_else>
                  <reset_cue cue="this.parent"/>
                </do_else>
              </actions>
            </cue>
          </cues>
        </cue>
      </cues>
    </cue>
    <library name="RenameActions" purpose="include_actions">
      <actions>
        <!-- confirm valadity of Object, saveBlackboard Entity -->
        <do_if value="$object.exists and player.entity.$unformatted_names.{$object}?">
          <do_if value="$keys? or $nameA? or $nameB? or $cargotype? or $type? or $scriptset? or $debug?">
            <debug_text filter="error" text="'Internally used Vars in Included Actions also used by previous Code: $keys: %1 $nameA: %2 $nameB: %3 $cargotype: %4 $type: %5 $scriptset: %6 $debug: %7 - will be overridden and removed!!'.[@$keys,@$nameA,@$nameB,@$cargotype,@$type,@$scriptset,@$debug]"/>
            <debug_to_file text="'[== ERROR ==] Internally used Vars in Included Actions also used by previous Code: $keys: %1 $nameA: %2 $nameB: %3 $cargotype: %4 $type: %5 $scriptset: %6 $debug: %7 - will be overridden and removed!!'.[@$keys,@$nameA,@$nameB,@$cargotype,@$type,@$scriptset,@$debug]" name="'Advanced Renaming.txt'" output="true"/>
          </do_if>
          <set_value name="$nameA" exact="player.entity.$unformatted_names.{$object}"/>
          <!-- Check if we have a Debug Expression in the Object Name and activate it (if not deactivate when outside Debug Mode)-->
          <!-- DEBUG OFF (Expression will be removed permanently) -->
          <substitute_text text="$nameB" source="$nameA">
            <replace string="{5554302,998}" with="''"/>
          </substitute_text>
          <do_if value="$nameA != $nameB">
            <set_value name="$object.pilot.$debug" exact="false" chance="$object.pilot.exists * 100"/>
            <set_value name="$object.defencenpc.$debug" exact="false" chance="$object.defencenpc.exists * 100"/>
            <set_value name="$object.tradenpc.$debug" exact="false" chance="$object.tradenpc.exists * 100"/>
            <set_value name="$object.engineer.$debug" exact="false" chance="$object.engineer.exists * 100"/>
            <!-- <set_value name="$object.architect.$debug" exact="false" chance="$object.architect.exists * 100"/>
            <set_value name="$object.boardingnpc.$debug" exact="false" chance="$object.boardingnpc.exists * 100"/-->
            <set_value name="player.entity.$unformatted_names.{$object}" exact="$nameB"/>
            <set_value name="$nameA" exact="$nameB"/>
          </do_if>
          <!-- DEBUG ON (Expression will stay) -->
          <substitute_text text="$nameB" source="$nameA">
            <replace string="{5554302,999}" with="'something'"/>
          </substitute_text>
          <do_if value="$nameA != $nameB">
            <!-- Activate Debugging on Object -->
            <set_value name="$object.pilot.$debug" exact="true" chance="$object.pilot.exists * 100"/>
            <set_value name="$object.defencenpc.$debug" exact="true" chance="$object.defencenpc.exists * 100"/>
            <set_value name="$object.tradenpc.$debug" exact="true" chance="$object.tradenpc.exists * 100"/>
            <set_value name="$object.engineer.$debug" exact="true" chance="$object.engineer.exists * 100"/>
            <!-- set_value name="$object.architect.$debug" exact="true" chance="$object.architect.exists * 100"/>
            <set_value name="$object.boardingnpc.$debug" exact="true" chance="$object.boardingnpc.exists * 100"/-->
            <set_value name="$debug" exact="'%1 Advanced Renaming Name Stages: \nUNFORM:  %2'.[$object.name,$nameA]"/>
          </do_if>
          <!-- ========= -->
          <!-- Check for Sequence Number reset presence and perform according actions -->
          <substitute_text text="$nameB" source="$nameA">
            <replace string="{5554302,500}" with="''"/>
          </substitute_text>
          <do_if value="$nameA != $nameB">
            <set_value name="$debug" exact="'%1\nSequence expression detected'.[$debug]" chance="$debug? *100" comment="fill debug output Value"/>
            <substitute_text text="$nameB" source="$nameA" comment="Current id reset">
              <replace string="{5554302,510}" with="''"/>
            </substitute_text>
            <do_if value="$nameA != $nameB">
              <remove_value name="$current_id.{$object}"/>
              <set_value name="$nameA" exact="$nameB"/>
              <set_value name="$debug" exact="'%1\nIDRES1:  %2'.[$debug,$nameA]" chance="$debug? *100" comment="fill debug output Value"/>
              <set_value name="player.entity.$unformatted_names.{$object}" exact="$nameB"/>
            </do_if>
            <substitute_text text="$nameB" source="$nameA" comment="Sequence Numbering Reset (all cases)">
              <replace string="{5554302,511}" with="''"/>
            </substitute_text>
            <do_if value="$nameA != $nameB">
              <substitute_text text="$nameB" source="$nameA" comment="Sequence Numbering Reset (Reset all sequence numbers)">
                <replace string="{5554302,512}" with="''"/>
              </substitute_text>
              <do_if value="$nameA != $nameB">
                <set_value name="$sequence_overall" exact="0"/>
                <set_value name="$nameA" exact="$nameB"/>
                <set_value name="$debug" exact="$debug+'\nOverall Sequence reset'" chance="$debug? *100"/>
              </do_if>
              <substitute_text text="$nameB" source="$nameA" comment="Sequence Numbering Reset (Object Type sequence numbers)">
                <replace string="{5554302,513}" with="''"/>
              </substitute_text>
              <do_if value="$nameA != $nameB">
                <set_value name="$sequence_type.{$object.macro}" exact="0"/>
                <set_value name="$nameA" exact="$nameB"/>
                <set_value name="$debug" exact="$debug+'\nObject Type Sequence reset'" chance="$debug? *100"/>
              </do_if>
              <substitute_text text="$nameB" source="$nameA" comment="Sequence Numbering Reset (Size sequence numbers)">
                <replace string="{5554302,514}" with="''"/>
              </substitute_text>
              <do_if value="$nameA != $nameB">
                <set_value name="$sequence_size.{$object.class}" exact="0"/>
                <set_value name="$nameA" exact="$nameB"/>
                <set_value name="$debug" exact="$debug+'\nObject Size Sequence reset'" chance="$debug? *100"/>
              </do_if>
              <substitute_text text="$nameB" source="$nameA" comment="Sequence Numbering Reset (Purpose sequence numbers)">
                <replace string="{5554302,515}" with="''"/>
              </substitute_text>
              <do_if value="$nameA != $nameB">
                <set_value name="$sequence_purpose.{$object.primarypurpose}" exact="0"/>
                <set_value name="$nameA" exact="$nameB"/>
                <set_value name="$debug" exact="$debug+'\nObject Purpose Sequence reset'" chance="$debug? *100"/>
              </do_if>
              <substitute_text text="$nameB" source="$nameA" comment="Sequence Numbering Reset (Size/purpose combination sequence numbers - class)">
                <replace string="{5554302,516}" with="''"/>
              </substitute_text>
              <do_if value="$nameA != $nameB">
                <do_if value="not $sequence_sizepurppose.{$object.class}?">
                  <set_value name="$sequence_sizepurppose.{$object.class}" exact="table[]"/>
                </do_if>
                <set_value name="$sequence_sizepurppose.{$object.class}.{$object.primarypurpose}" exact="0"/>
                <set_value name="$nameA" exact="$nameB"/>
                <set_value name="$debug" exact="$debug+'\nObject Class Sequence reset'" chance="$debug? *100"/>
              </do_if>
              <set_value name="$debug" exact="'%1\nIDRES2:  %2'.[$debug,$nameA]" chance="$debug? *100" comment="fill debug output Value"/>
              <set_value name="player.entity.$unformatted_names.{$object}" exact="$nameB"/>
            </do_if>
          </do_if>
          <!--=====-->
          <!-- Perform Static Replacements (Preffered Marking Key / ) -->
          <get_text_ids_in_range result="$keys" page="5554301" start="0" end="1999" factor="2"/>
          <do_all exact="$keys.count" counter="$i" reverse="false">
            <substitute_text text="$nameA">
              <replace string="readtext.{5554301}.{$keys.{$i}}" with="readtext.{5554301}.{$keys.{$i}+1}"/>
            </substitute_text>
          </do_all>
          <set_value name="$debug" exact="'%1\nCUSTOM: (Not seperate from next yet)\nLOCAL:   %2'.[$debug,$nameA]" chance="$debug? *100" comment="fill debug output Value"/>
          <get_text_ids_in_range result="$keys" page="5554301" start="2000" end="3000" factor="2"/>
          <do_all exact="$keys.count" counter="$i" reverse="false">
            <substitute_text text="$nameA">
              <replace string="readtext.{5554301}.{$keys.{$i}}" with="readtext.{5554301}.{$keys.{$i}+1}"/>
            </substitute_text>
          </do_all>
          <set_value name="$debug" exact="'%1\nSTATIC:  %2'.[$debug,$nameA]" chance="$debug? *100" comment="fill debug output Value"/>
          <!-- ========= -->
          <!-- Perform Engine-based Dynamic Replacements ( Marking Key % ) and also add them to Update Group if used-->
          <!-- - - - - - - - - - - - -->
          <!-- Aquire Values which might be put into Object Names but cannt be covered in a single expression -->
          <!-- Freight Class -->
          <do_if value="true" comment="just for better node folding">
            <set_value name="$cargotype" exact="''"/>
            <!-- Check if we have Universal Cargo -->
            <do_if value="$object.cargo.capacity.universal">
              <set_value name="$cargotype" exact="{5554302,201}"/>
            </do_if>
            <!-- Single/Hybrid Cargo - check each class individually -->
            <do_else>
              <do_if value="$object.cargo.capacity.solid">
                <set_value name="$cargotype" operation="add" exact="{5554302,202}"/>
              </do_if>
              <do_if value="$object.cargo.capacity.container">
                <set_value name="$cargotype" operation="add" exact="{5554302,203}"/>
              </do_if>
              <do_if value="$object.cargo.capacity.liquid">
                <set_value name="$cargotype" operation="add" exact="{5554302,205}"/>
              </do_if>
            </do_else>
            <!-- Other/odd Cargo Types - just for completeness -->
            <!-- <do_if value="$object.cargo.tags.indexof.{tag.fuel}">
              <set_value name="$cargotype" operation="add" exact="{5554302,206}"/>
            </do_if> 
            <do_if value="$object.cargo.tags.indexof.{tag.ship}">
              <set_value name="$cargotype" operation="add" exact="{5554302,207}"/>
            </do_if>
            <do_if value="$object.cargo.tags.indexof.{tag.inventory}">
              <set_value name="$cargotype" operation="add" exact="{5554302,208}"/>
            </do_if>-->
          </do_if>
          <!--  Ship type (without cargo class variations - already handled by cargo type expression)-->
          <do_if value="$object.isrealclass.station">
            <do_if value="$object.isheadquarters or $object.isfactionheadquarters">
              <set_value name="$type" exact="{20102,2011}"/>
            </do_if>
            <do_elseif value="$object.isshipyard">
              <set_value name="$type" exact="{20102,1071}"/>
            </do_elseif>
            <do_elseif value="$object.iswharf">
              <set_value name="$type" exact="{20102,1081}"/>
            </do_elseif>
            <do_elseif value="$object.isequipmentdock">
              <set_value name="$type" exact="{20102,1061}"/>
            </do_elseif>
            <do_elseif value="$object.products.count">
              <set_value name="$type" exact="{20102,1001}"/>
            </do_elseif>
            <do_elseif value="$object.isrecyclingfacility">
              <set_value name="$type" exact="{20204,10007}"/>
            </do_elseif>
            <do_elseif value="$object.istradestation">
              <set_value name="$type" exact="{20102,1051}"/>
            </do_elseif>
            <do_elseif value="$object.ispiratebase">
              <set_value name="$type" exact="{20102,1501}"/>
            </do_elseif>
            <do_elseif value="$object.isdefencestation">
              <set_value name="$type" exact="{20102,1041}"/>
            </do_elseif>
            <do_else>
              <set_value name="$type" exact="$object.macro.name"/>
            </do_else>
          </do_if>
          <do_else>
            <set_value name="$type" exact="$object.macro.name"/>
            <get_text_ids_in_range result="$keys" page="5554301" start="20000" end="21000" factor="2"/>
            <do_all exact="$keys.count" counter="$i" reverse="false">
              <substitute_text text="$type">
                <replace string="readtext.{5554301}.{$keys.{$i}}" with="readtext.{5554301}.{$keys.{$i}+1}"/>
              </substitute_text>
            </do_all>
          </do_else>
          <!-- - - - - - - - - - - - -->
          <!-- Actual Replacements in the Name -->
          <!-- Expressions which always have the same Result - just change the content of the name Var -->
          <substitute_text text="$nameA">
            <replace string="{5554302,200}" with="$cargotype"/>
            <replace string="{5554302,100}" with="if $shortname.{$object.commander} then $shortname.{$object.commander} else $object.commander.name"/>
            <replace string="{5554302,101}" with="$object.commander.sector.name"/>
            <replace string="{5554302,102}" with="$object.commander.cluster.name"/>
            <replace string="{5554302,103}" with="$object.sector.name"/>
            <replace string="{5554302,104}" with="$object.cluster.name"/>
            <replace string="{5554302,105}" with="$type"/>
            <replace string="{5554302,106}" with="$type"/>
            <replace string="{5554302,107}" with="if $object.isrealclass.station then $type else $object.macro.name"/>
            <!-- will be post-dynamic replaced with proper Purpose Name -->
            <replace string="{5554302,108}" with="{5554301,11001} + $object.primarypurpose"/>
            <!-- will be post-dynamic replaced with proper Class Name -->
            <replace string="{5554302,109}" with="{5554301,11015} + $object.class"/>
            <replace string="{5554302,110}" with="$object.idcode"/>
            <!-- Random Color (cannot be done from t-file directly) -->
            <replace string="{5554302,119}+'0'" with="[{5554301,2001},{5554301,2003},{5554301,2005},{5554301,2007},{5554301,2009},{5554301,2011},{5554301,2013},{5554301,2015},{5554301,2017},{5554301,2019},{5554301,2021},{5554301,2025}+'0'].random"/>
            <replace string="{5554302,119}+'1'" with="[{5554301,2001},{5554301,2003},{5554301,2005},{5554301,2007},{5554301,2009},{5554301,2011},{5554301,2013},{5554301,2015},{5554301,2017},{5554301,2019},{5554301,2021},{5554301,2025}+'0'].random"/>
            <replace string="{5554302,119}+'2'" with="[{5554301,2001},{5554301,2003},{5554301,2005},{5554301,2007},{5554301,2009},{5554301,2011},{5554301,2013},{5554301,2015},{5554301,2017},{5554301,2019},{5554301,2021},{5554301,2025}+'0'].random"/>
            <replace string="{5554302,119}+'3'" with="[{5554301,2001},{5554301,2003},{5554301,2005},{5554301,2007},{5554301,2009},{5554301,2011},{5554301,2013},{5554301,2015},{5554301,2017},{5554301,2019},{5554301,2021},{5554301,2025}+'0'].random"/>
            <replace string="{5554302,119}+'4'" with="[{5554301,2001},{5554301,2003},{5554301,2005},{5554301,2007},{5554301,2009},{5554301,2011},{5554301,2013},{5554301,2015},{5554301,2017},{5554301,2019},{5554301,2021},{5554301,2025}+'0'].random"/>
            <replace string="{5554302,119}+'5'" with="[{5554301,2001},{5554301,2003},{5554301,2005},{5554301,2007},{5554301,2009},{5554301,2011},{5554301,2013},{5554301,2015},{5554301,2017},{5554301,2019},{5554301,2021},{5554301,2025}+'0'].random"/>
            <replace string="{5554302,119}+'6'" with="[{5554301,2001},{5554301,2003},{5554301,2005},{5554301,2007},{5554301,2009},{5554301,2011},{5554301,2013},{5554301,2015},{5554301,2017},{5554301,2019},{5554301,2021},{5554301,2025}+'0'].random"/>
            <replace string="{5554302,119}+'7'" with="[{5554301,2001},{5554301,2003},{5554301,2005},{5554301,2007},{5554301,2009},{5554301,2011},{5554301,2013},{5554301,2015},{5554301,2017},{5554301,2019},{5554301,2021},{5554301,2025}+'0'].random"/>
            <replace string="{5554302,119}+'8'" with="[{5554301,2001},{5554301,2003},{5554301,2005},{5554301,2007},{5554301,2009},{5554301,2011},{5554301,2013},{5554301,2015},{5554301,2017},{5554301,2019},{5554301,2021},{5554301,2025}+'0'].random"/>
            <replace string="{5554302,119}+'9'" with="[{5554301,2001},{5554301,2003},{5554301,2005},{5554301,2007},{5554301,2009},{5554301,2011},{5554301,2013},{5554301,2015},{5554301,2017},{5554301,2019},{5554301,2021},{5554301,2025}+'0'].random"/>
            <!-- Short Name Variants - doesnt work in XR v4.0, but for future usage -->
            <!--
            <replace string="{5554302,110}" with="$object.commander.zone.shortname"/>
            <replace string="{5554302,111}" with="$object.commander.sector.shortname"/>
            <replace string="{5554302,112}" with="$object.commander.cluster.shortname"/>
            <replace string="{5554302,113}" with="$object.zone.shortname"/>
            <replace string="{5554302,114}" with="$object.sector.shortname"/>
            <replace string="{5554302,115}" with="$object.cluster.shortname"/>
            <replace string="{5554302,116}" with="$object.macro.shortname"/>
            -->
            <replace string="{5554302,111}" with="$object.fleet.name"/>
            <replace string="{5554302,30}" with="readtext.{5554302}.{32+$object.subordinategroupid}"/>
          </substitute_text>
          <!-- Ship Sequence Numbers-->
          <substitute_text text="$nameB" source="$nameA">
            <replace string="{5554302,500}" with="''"/>
          </substitute_text>
          <do_if value="$nameA != $nameB">
            <set_value name="$debug" exact="'%1\nSequence expression detected'.[$debug]" chance="$debug? *100" comment="fill debug output Value"/>
            <!-- Get a sequence Number if we have none yet -->
            <do_if value="$current_id.{$object}?">
              <set_value name="$tmp" exact="$current_id.{$object}"/>
              <set_value name="$debug" exact="$debug+'\nSet id from Stored Value: '+ $current_id.{$object}" chance="$debug? *100"/>
            </do_if>
            <do_else>
              <set_value name="$tmp" exact="$sequence_overall+1"/>
            </do_else>
            <substitute_text text="$nameB" source="$nameA">
              <replace string="{5554302,501}" with="( if $sequence_overall ge 100 and $tmp lt 100  then {5554302,122} else '' ) + ( if $sequence_overall ge 10 and $tmp lt 10  then {5554302,122} else '' ) + $tmp"/>
            </substitute_text>
            <do_if value="$nameA != $nameB">
              <do_if value="not $current_id.{$object}?">
                <set_value name="$sequence_overall" operation="add"/>
                <set_value name="$current_id.{$object}" exact="$sequence_overall"/>
                <set_value name="$debug" exact="$debug+'\nSet id from Overall: '+ $current_id.{$object}" chance="$debug? *100"/>
              </do_if>
            </do_if>
            <do_else>
              <do_if value="not $current_id.{$object}?">
                <set_value name="$tmp" exact="$sequence_type.{$object.macro}+1"/>
              </do_if>
              <substitute_text text="$nameB" source="$nameA">
                <replace string="{5554302,502}" with="( if $sequence_type.{$object.macro} ge 100 and $tmp lt 100  then {5554302,122} else '' ) + ( if $sequence_type.{$object.macro} ge 10 and $tmp lt 10  then {5554302,122} else '' ) + $tmp"/>
              </substitute_text>
              <do_if value="$nameA != $nameB">
                <do_if value="not $current_id.{$object}?">
                  <set_value name="$sequence_type.{$object.macro}" operation="add"/>
                  <set_value name="$current_id.{$object}" exact="$sequence_type.{$object.macro}"/>
                  <set_value name="$debug" exact="$debug+'\nSet id from Type: '+ $current_id.{$object}" chance="$debug? *100"/>
                </do_if>
              </do_if>
              <do_else>
                <do_if value="not $current_id.{$object}?">
                  <set_value name="$tmp" exact="$sequence_size.{$object.class}+1"/>
                </do_if>
                <substitute_text text="$nameB" source="$nameA">
                  <replace string="{5554302,503}" with="( if $sequence_size.{$object.class} ge 100 and $tmp lt 100  then {5554302,122} else '' ) + ( if $sequence_size.{$object.class} ge 10 and $tmp lt 10  then {5554302,122} else '' ) + $tmp"/>
                </substitute_text>
                <do_if value="$nameA != $nameB">
                  <do_if value="not $current_id.{$object}?">
                    <set_value name="$sequence_size.{$object.class}" operation="add"/>
                    <set_value name="$current_id.{$object}" exact="$sequence_size.{$object.class}"/>
                    <set_value name="$debug" exact="$debug+'\nSet id from Size: '+ $current_id.{$object}" chance="$debug? *100"/>
                  </do_if>
                </do_if>
                <do_else>
                  <do_if value="not $current_id.{$object}?">
                    <set_value name="$tmp" exact="$sequence_purpose.{$object.primarypurpose}+1"/>
                  </do_if>
                  <substitute_text text="$nameB" source="$nameA">
                    <replace string="{5554302,504}" with="( if $sequence_purpose.{$object.primarypurpose} ge 100 and $tmp lt 100  then {5554302,122} else '' ) + ( if $sequence_purpose.{$object.primarypurpose} ge 10 and $tmp lt 10  then {5554302,122} else '' ) + $tmp"/>
                  </substitute_text>
                  <do_if value="$nameA != $nameB">
                    <do_if value="not $current_id.{$object}?">
                      <set_value name="$sequence_purpose.{$object.primarypurpose}" operation="add"/>
                      <set_value name="$current_id.{$object}" exact="$sequence_purpose.{$object.primarypurpose}"/>
                      <set_value name="$debug" exact="$debug+'\nSet id from Purpose: '+ $current_id.{$object}" chance="$debug? *100"/>
                    </do_if>
                  </do_if>
                  <do_else>
                    <do_if value="not $current_id.{$object}?">
                      <set_value name="$tmp" exact="$sequence_sizepurppose.{$object.class}.{$object.primarypurpose}+1"/>
                    </do_if>
                    <substitute_text text="$nameB" source="$nameA">
                      <replace string="{5554302,505}" with="''"/>
                    </substitute_text>
                    <do_if value="$nameA != $nameB">
                      <do_if value="not $current_id.{$object}?">
                        <do_if value="not$sequence_sizepurppose.{$object.class}?">
                          <set_value name="$sequence_sizepurppose.{$object.class}" exact="table[]"/>
                        </do_if>
                        <set_value name="$sequence_sizepurppose.{$object.class}.{$object.primarypurpose}" operation="add"/>
                        <set_value name="$current_id.{$object}" exact="$sequence_sizepurppose.{$object.class}.{$object.primarypurpose}"/>
                        <set_value name="$debug" exact="$debug+'\nSet id from Class: '+ $current_id.{$object}" chance="$debug? *100"/>
                      </do_if>
                    </do_if>
                    <do_else>
                    </do_else>
                  </do_else>
                </do_else>
              </do_else>
            </do_else>
            <!--substitute_text text="$nameA">
              <replace string="{5554302,501}" with="$current_id.{$object}"/>
              <replace string="{5554302,502}" with="$current_id.{$object}"/>
              <replace string="{5554302,503}" with="$current_id.{$object}"/>
              <replace string="{5554302,504}" with="$current_id.{$object}"/>
              <replace string="{5554302,505}" with="$current_id.{$object}"/>
            </substitute_text-->
            <set_value name="$debug" exact="'%1\nSEQUENC: %2'.[$debug,$nameB ]" chance="$debug? *100" comment="fill debug output Value"/>
          </do_if>
          <!-- From here on $nameA contains the visible name (with frequently changing content) and $nameB the short variation without frequently changing content - if both are identical after this there is no need for Updates -->
          <set_value name="$nameA" exact="$nameB"/>
          <!-- Perform Script-Dynamic Replacements ( Marking Key $ ) - no Registration for Automated Update Event, send Signal or Include Actions yourself.-->
          <!-- (feel free to add your own Values to the local table $namereplacement though ;) -->
          <do_if value="not player.entity.$namereplacement.{$object}?">
            <set_value name="player.entity.$namereplacement.{$object}" exact="table[]"/>
          </do_if>
          <set_value name="$keys" exact="player.entity.$namereplacement.{$object}.keys.list"/>
          <do_all exact="$keys.count" counter="$i" reverse="false">
            <substitute_text text="$nameA">
              <replace string="$keys.{$i}" with="player.entity.$namereplacement.{$object}.{$keys.{$i}}"/>
            </substitute_text>
            <substitute_text text="$nameB">
              <replace string="$keys.{$i}" with="''"/>
            </substitute_text>
          </do_all>
          <set_value name="$debug" exact="'%1\nSCRIPT EXPR: %3\nSCRIPT:  %2'.[$debug,$nameA,player.entity.$namereplacement.{$object}]" chance="$debug? *100" comment="fill debug output Value"/>
          <!-- First generate the short Name by replacing all Dynamic Expressions with an empty String ( =removing them) -->
          <substitute_text text="$nameB">
            <!-- Skill-based Expressions -->
            <replace string="{5554302,40}" with="''"/>
            <replace string="{5554302,41}" with="''"/>
            <replace string="{5554302,42}" with="''"/>
            <replace string="{5554302,43}" with="''"/>
            <replace string="{5554302,44}" with="''"/>
            <replace string="{5554302,45}" with="''"/>
            <replace string="{5554302,46}" with="''"/>
            <replace string="{5554302,47}" with="''"/>
            <replace string="{5554302,48}" with="''"/>
            <replace string="{5554302,49}" with="''"/>
            <replace string="{5554302,50}" with="''"/>
            <replace string="{5554302,51}" with="''"/>
            <replace string="{5554302,52}" with="''"/>
            <replace string="{5554302,53}" with="''"/>
            <replace string="{5554302,54}" with="''"/>
            <replace string="{5554302,55}" with="''"/>
            <replace string="{5554302,56}" with="''"/>
            <!--
            <replace string="{5554302,57}" with="''"/>
            <replace string="{5554302,58}" with="''"/>
            <replace string="{5554302,59}" with="''"/>
            <replace string="{5554302,60}" with="''"/>
            <replace string="{5554302,61}" with="''"/>
            <replace string="{5554302,62}" with="''"/>
            <replace string="{5554302,63}" with="''"/>
            <replace string="{5554302,64}" with="''"/>
            <replace string="{5554302,65}" with="''"/>
            <replace string="{5554302,66}" with="''"/>
            <replace string="{5554302,67}" with="''"/>
            <replace string="{5554302,68}" with="''"/>
            <replace string="{5554302,69}" with="''"/>
            <replace string="{5554302,70}" with="''"/>
            <replace string="{5554302,71}" with="''"/>
            <replace string="{5554302,72}" with="''"/>
            <replace string="{5554302,73}" with="''"/>
            <replace string="{5554302,74}" with="''"/>
            <replace string="{5554302,75}" with="''"/>
            <replace string="{5554302,76}" with="''"/>
            <replace string="{5554302,77}" with="''"/>
            <replace string="{5554302,78}" with="''"/>
            <replace string="{5554302,79}" with="''"/>-->
            <replace string="{5554302,80}" with="''"/>
            <replace string="{5554302,81}" with="''"/>
            <replace string="{5554302,82}" with="''"/>
            <replace string="{5554302,83}" with="''"/>
            <replace string="{5554302,84}" with="''"/>
            <replace string="{5554302,85}" with="''"/>
            <replace string="{5554302,86}" with="''"/>
            <replace string="{5554302,87}" with="''"/>
            <replace string="{5554302,88}" with="''"/>
            <replace string="{5554302,89}" with="''"/>
            <!-- Boarding Stuff -->
            <replace string="{5554302,90}" with="''"/>
            <replace string="{5554302,91}" with="''"/>
            <replace string="{5554302,92}" with="''"/>
            <replace string="{5554302,93}" with="''"/>
            <!-- Station Build Sequence Progress -->
            <replace string="{5554302,301}" with="''"/>
            <replace string="{5554302,302}" with="''"/>
            <replace string="{5554302,303}" with="''"/>
            <replace string="{5554302,304}" with="''"/>
            <replace string="{5554302,305}" with="''"/>
            <replace string="{5554302,306}" with="''"/>
            <replace string="{5554302,307}" with="''"/>
            <replace string="{5554302,308}" with="''"/>
            <replace string="{5554302,309}" with="''"/>
            <!-- Trade relevant Replacements -->
            <replace string="{5554302,123}" with="''"/>
            <replace string="{5554302,124}" with="''"/>
            <replace string="{5554302,126}" with="''"/>
            <replace string="{5554302,128}" with="''"/>
            <replace string="{5554302,129}" with="''"/>
            <replace string="{5554302,130}" with="''"/>
            <replace string="{5554302,131}" with="''"/>
            <!-- Values based on other Scripts -->
            <replace string="{5554302,120}" with="''"/>
            <!-- Station related expressions -->
            <replace string="{5554302,411}" with="''"/>
            <replace string="{5554302,412}" with="''"/>
            <replace string="{5554302,413}" with="''"/>
            <replace string="{5554302,421}" with="''"/>
            <replace string="{5554302,422}" with="''"/>
            <replace string="{5554302,423}" with="''"/>
            <replace string="{5554302,431}" with="''"/>
            <replace string="{5554302,432}" with="''"/>
            <replace string="{5554302,433}" with="''"/>
          </substitute_text>
          <!-- Generate the Long Name -->
          <!-- Find Primary and Secondary Ware in Cargo -->
          <set_value name="$cargolist" exact="@$object.cargo.list"/>
          <set_value name="$primarycargo" exact="null"/>
          <set_value name="$secondarycargo" exact="null"/>
          <do_all exact="$cargolist.count" counter="$i">
            <do_if value="( @$object.cargo.{$cargolist.{$i}}.count * @$cargolist.{$i}.volume ) gt ( @$object.cargo.{$primarycargo}.count * @$primarycargo.volume )">
              <set_value name="$secondarycargo" exact="$primarycargo"/>
              <set_value name="$primarycargo" exact="$cargolist.{$i}"/>
            </do_if>
            <do_elseif value="( @$object.cargo.{$cargolist.{$i}}.count * @$cargolist.{$i}.volume ) gt ( @$object.cargo.{$secondarycargo}.count * @$secondarycargo.volume )">
              <set_value name="$secondarycargo" exact="$cargolist.{$i}"/>
            </do_elseif>
          </do_all>
          <set_value name="$primarycargo" exact="if $primarycargo then $primarycargo.name else {5554302,125}"/>
          <set_value name="$secondarycargo" exact="if $secondarycargo then $secondarycargo.name else {5554302,127}"/>
          <!-- Get Ware Tiers -->
          <do_if value="$object.isclass.station">
            <set_value name="$ressmintier" exact="10"/>
            <set_value name="$ressmaxtier" exact="0"/>
            <set_value name="$intermintier" exact="10"/>
            <set_value name="$intermaxtier" exact="0"/>
            <set_value name="$prodmintier" exact="10"/>
            <set_value name="$prodmaxtier" exact="0"/>
            <do_for_each in="$object.resources.pure.list">
              <do_if value="$TiersByWare.{loop.element}?">
                <set_value name="$tier" exact="$TiersByWare.{loop.element}"/>
              </do_if>
              <do_else>
                <set_value name="$tier" exact="0"/>
              </do_else>
              <do_if value="$ressmintier lt $tier">
                <set_value name="$ressmintier" exact="$tier"/>
              </do_if>
              <do_if value="$ressmaxtier gt $tier">
                <set_value name="$ressmaxtier" exact="$tier"/>
              </do_if>
            </do_for_each>
            <do_for_each in="$object.resources.intermediate.list">
              <set_value name="$tier" exact="$TiersByWare.{loop.element}"/>
              <do_if value="$intermintier lt $tier">
                <set_value name="$intermintier" exact="$tier"/>
              </do_if>
              <do_if value="$intermaxtier gt $tier">
                <set_value name="$intermaxtier" exact="$tier"/>
              </do_if>
            </do_for_each>
            <set_value name="$products" exact="[]"/>
            <do_for_each in="$object.products.list">
              <do_if value="not $object.products.{loop.element}.intermediate">
                <append_to_list name="$products" exact="loop.element"/>
              </do_if>
            </do_for_each>
            <do_for_each in="$products">
              <set_value name="$tier" exact="$TiersByWare.{loop.element}"/>
              <do_if value="$prodmintier lt $tier">
                <set_value name="$prodmintier" exact="$tier"/>
              </do_if>
              <do_if value="$prodmaxtier gt $tier">
                <set_value name="$prodmaxtier" exact="$tier"/>
              </do_if>
            </do_for_each>
          </do_if>
          <do_else>
            <set_value name="$ressmintier" exact="''"/>
            <set_value name="$ressmaxtier" exact="''"/>
            <set_value name="$intermintier" exact="''"/>
            <set_value name="$intermintier" exact="''"/>
            <set_value name="$prodmintier" exact="''"/>
            <set_value name="$prodmintier" exact="''"/>
          </do_else>
          <substitute_text text="$nameA">
            <!-- Skill-based Expressions -->
            <replace string="{5554302,80}+{5554302,88}" with="if $object.tradenpc.exists then $object.tradenpc.skill.boarding else @$object.assignedaipilot.skill.boarding"/>
            <replace string="{5554302,80}+{5554302,89}" with="(if $object.tradenpc.exists then $object.tradenpc.skill.boarding else @$object.assignedaipilot.skill.boarding)/3"/>
            <replace string="{5554302,81}+{5554302,88}" with="if $object.tradenpc.exists then $object.tradenpc.combinedskill else @$object.assignedaipilot.combinedskill"/>
            <replace string="{5554302,81}+{5554302,89}" with="(if $object.tradenpc.exists then $object.tradenpc.combinedskill else @$object.assignedaipilot.combinedskill)/20"/>
            <replace string="{5554302,82}+{5554302,88}" with="if $object.tradenpc.exists then $object.tradenpc.skill.engineering else @$object.assignedaipilot.skill.engineering"/>
            <replace string="{5554302,82}+{5554302,89}" with="(if $object.tradenpc.exists then $object.tradenpc.skill.engineering else @$object.assignedaipilot.skill.engineering)/3"/>
            <replace string="{5554302,83}+{5554302,88}" with="if $object.tradenpc.exists then $object.tradenpc.skill.management else @$object.assignedaipilot.skill.management"/>
            <replace string="{5554302,83}+{5554302,89}" with="(if $object.tradenpc.exists then $object.tradenpc.skill.management else @$object.assignedaipilot.skill.management)/3"/>
            <replace string="{5554302,84}+{5554302,88}" with="if $object.tradenpc.exists then $object.tradenpc.skill.management else @$object.assignedaipilot.skill.management"/>
            <replace string="{5554302,84}+{5554302,89}" with="(if $object.tradenpc.exists then $object.tradenpc.skill.management else @$object.assignedaipilot.skill.management)/3"/>
            <replace string="{5554302,85}+{5554302,88}" with="if $object.tradenpc.exists then $object.tradenpc.skill.morale else @$object.assignedaipilot.skill.morale"/>
            <replace string="{5554302,85}+{5554302,89}" with="(if $object.tradenpc.exists then $object.tradenpc.skill.morale else @$object.assignedaipilot.skill.morale)/3"/>
            <replace string="{5554302,86}+{5554302,88}" with="if $object.tradenpc.exists then $object.tradenpc.skill.piloting else @$object.assignedaipilot.skill.piloting"/>
            <replace string="{5554302,86}+{5554302,89}" with="(if $object.tradenpc.exists then $object.tradenpc.skill.piloting else @$object.assignedaipilot.skill.piloting)/3"/>
            <!-- Boarding Stuff -->
            <replace string="{5554302,90}" with="@$object.boardingmarines.count"/>
            <replace string="{5554302,91}" with="@$object.boardingmarines.combinedskill"/>
            <replace string="{5554302,92}" with="@$object.boardingresistance"/>
            <replace string="{5554302,93}" with="@$object.boardingstrength"/>
            <!-- Station Build Progress -->
            <replace string="{5554302,301}" with="if $object.buildingprocessor.exists and $object.buildingprocessor.isbuilding then $object.buildingprocessor.elapsedtime else ''"/>
            <replace string="{5554302,302}" with="if $object.buildingprocessor.exists and $object.buildingprocessor.isbuilding then $object.buildingprocessor.totaltime else ''"/>
            <replace string="{5554302,303}" with="if $object.buildingprocessor.exists and $object.buildingprocessor.isbuilding then $object.buildingprocessor.elapsedsteptime else ''"/>
            <replace string="{5554302,304}" with="if $object.buildingprocessor.exists and $object.buildingprocessor.isbuilding then $object.buildingprocessor.steptime else ''"/>
            <replace string="{5554302,305}" with="if $object.buildingprocessor.exists and $object.buildingprocessor.isbuilding then ($object.buildingprocessor.elapsedtime / $object.buildingprocessor.totaltime * 100 ) + '%' else ''"/>
            <replace string="{5554302,306}" with="$object.builds.queued.count"/>
            <replace string="{5554302,307}" with="$object.builds.inprogress.count"/>
            <!-- Trade relevant Replacements -->
            <replace string="{5554302,123}" with="$object.money.formatted.{'%s%Cr'}"/>
            <replace string="{5554302,124}" with="$primarycargo"/>
            <replace string="{5554302,126}" with="$secondarycargo"/>
            <replace string="{5554302,128}" with="@$object.cargo.free.all"/>
            <replace string="{5554302,129}" with="@$object.cargo.capacity.all"/>
            <replace string="{5554302,130}" with="@$object.cargo.capacity.all - @$object.cargo.free.all"/>
            <replace string="{5554302,131}" with="$cargolist.count"/>
            <replace string="{5554302,132}" with="if @$object.order.isinloop then {1001,11270} else @$object.defaultorder.name"/>
            <replace string="{5554302,133}" with="@$object.order.name"/>
            <replace string="{5554302,134}" with="@$object.orders.count"/>
            <!-- Station related expressions -->
            <replace string="{5554302,411}" with="if @$object.resources.pure.count == 1 then @$object.resources.pure.{1} else @$object.resources.pure.count"/>
            <replace string="{5554302,412}" with="$ressmintier"/>
            <replace string="{5554302,413}" with="$ressmaxtier"/>
            <replace string="{5554302,421}" with="if @$object.resources.intermediate.count == 1 then @$object.resources.intermediate.{1} else @$object.resources.intermediate.count"/>
            <replace string="{5554302,422}" with="$intermintier"/>
            <replace string="{5554302,423}" with="$intermaxtier"/>
            <replace string="{5554302,431}" with="if $products then if @products.count == 1 then $products.{1} else @$object.products.count else ''"/>
            <replace string="{5554302,432}" with="$prodmintier"/>
            <replace string="{5554302,433}" with="$prodmaxtier"/>
          </substitute_text>
          <!-- remove temp Values for Cargo Expression -->
          <remove_value name="$primarycargo"/>
          <remove_value name="$secondarycargo"/>
          <remove_value name="$cargolist"/>
          <remove_value name="$products"/>
          <set_value name="$debug" exact="'%1\nDYNAMIC: %2 %4 %3'.[$debug,$nameA,@$nameB,if $nameA == @$nameB then '==' else '!=' ]" chance="$debug? *100" comment="fill debug output Value"/>
          <!-- if the Name contains something dynamic - add it to the Update-Group, otherwise remove it -->
          <!--<do_if value="$nameA != $nameB">
            <add_to_group groupname="md.UT_CAC_Object_Name_Managment.Init.$NamedObjectsDynamic" object="$object" comment="since this code might be included elsewhere refer to this var with mdscript/cue"/>
          </do_if>
          <do_else>
            <remove_from_group group="md.UT_CAC_Object_Name_Managment.Init.$NamedObjectsDynamic" object="$object"/>
            <remove_value name="$nameB"/>
          </do_else>-->
          <!-- Post-dynamic substitutions -->
          <get_text_ids_in_range result="$keys" page="5554301" start="10000" end="12000" factor="2"/>
          <do_if value="$nameB?">
            <do_all exact="$keys.count" counter="$i" reverse="false">
              <substitute_text text="$nameA">
                <replace string="readtext.{5554301}.{$keys.{$i}}" with="readtext.{5554301}.{$keys.{$i}+1}"/>
              </substitute_text>
              <substitute_text text="$nameB">
                <replace string="readtext.{5554301}.{$keys.{$i}}" with="readtext.{5554301}.{$keys.{$i}+1}"/>
              </substitute_text>
            </do_all>
            <!-- remove unneeded double-spaces -->
            <substitute_text text="$nameA">
              <replace string="'    '" with="' '"/>
              <replace string="'  '" with="' '"/>
            </substitute_text>
            <substitute_text text="$nameB">
              <replace string="'    '" with="' '"/>
              <replace string="'  '" with="' '"/>
            </substitute_text>
            <set_value name="$shortname.$object" exact="$nameB"/>
          </do_if>
          <do_else>
            <do_all exact="$keys.count" counter="$i" reverse="false">
              <substitute_text text="$nameA">
                <replace string="readtext.{5554301}.{$keys.{$i}}" with="readtext.{5554301}.{$keys.{$i}+1}"/>
              </substitute_text>
            </do_all>
            <remove_value name="$shortname.$object"/>
          </do_else>
          <set_value name="$debug" exact="'%1\nPOSTDYN: %2    %3'.[$debug,$nameA,@$nameB]" chance="$debug? *100" comment="fill debug output Value"/>
          <do_if value="$nameA == ''">
            <set_value name="$nameA" exact="$object.macro.name"/>
          </do_if>
          <do_else>
            <do_all chance="(player.systemtime.{'%d%m'} == '0104')">
              <set_value name="$letters" exact="['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z','0','1','2','3','4','5','6','7','8','9','0']"/>
              <do_all exact="$letters.count" counter="$i" reverse="false">
                <substitute_text text="$nameA">
                  <replace string="$letters.{$i}" with="[{5554301,2001},{5554301,2003},{5554301,2005},{5554301,2007},{5554301,2009},{5554301,2011},{5554301,2013},{5554301,2015},{5554301,2017},{5554301,2019},{5554301,2021},{5554301,2025}+'0'].random + $letters.{$i}"/>
                </substitute_text>
                <substitute_text text="$nameA">
                  <replace string="{5554301,2025} + {5554301,2025}" with="{5554301,2025}"/>
                </substitute_text>
              </do_all>
            </do_all>
          </do_else>
          <!-- Finally Set Name, write debug value to log and cleanup -->
          <set_object_name object="$object" name="$nameA + '{5554301,2017}'" comment="adding neutral Color Tag at the end"/>
          <add_to_group groupname="md.UT_CAC_Object_Name_Managment.Init.$NamedObjects" object="$object"/>
          <!-- for the short name / $nameB look in the Code Group before - more economic there -->
          <set_value name="$debug" exact="'%1\nNaming Table: %2'.[$debug,player.entity.$unformatted_names]" chance="$debug? *100" comment="fill debug output Value"/>
          <debug_to_file text="$debug" name="'Advanced Renaming.txt'" output="true" chance="$debug? *100"/>
          <remove_value name="$keys"/>
          <remove_value name="$nameA"/>
          <remove_value name="$nameB"/>
          <remove_value name="$cargotype"/>
          <remove_value name="$type"/>
          <remove_value name="$scriptset"/>
          <remove_value name="$debug"/>
        </do_if>
        <do_else>
          <do_if value="not $object.exists">
            <debug_text filter="error" text="'Object not set or Invalid for Included Code $object: %1 - doing nothing!!'.[@$object]"/>
            <debug_to_file text="'[== ERROR ==] Object not set or Invalid for Included Code $object: %1 - doing nothing!!'.[@$object]" name="'Advanced Renaming.txt'"/>
          </do_if>
          <do_else>
            <remove_from_group group="md.UT_CAC_Object_Name_Managment.Init.$NamedObjects" object="$object"/>
            <!--<remove_from_group group="md.UT_CAC_Object_Name_Managment.Init.$NamedObjectsDynamic" object="$object"/>-->
            <debug_to_file text="'No Unformatted Name Var set on Object: %1 - doing nothing!! (may be caused by a Script Update)'.[@$object]" name="'Advanced Renaming.txt'" output="true"/>
          </do_else>
        </do_else>
      </actions>
    </library>
    <library name="SetWareTiers" purpose="run_actions">
      <params>
        <param name="TiersByWare" default="null"/>
        <!-- $TiersByWare.{$Ware} = tier number -->
        <param name="Ware" default="null"/>
        <param name="IsInit" default="null"/>
        <param name="DebugIndent" default="''"/>
      </params>
      <actions>
        <do_if value="{5554302,3} == 'kurtee' or {5554302,3} == 'auto'">
          <do_if value="$IsInit">
            <set_value name="$TiersByWare" exact="table[]"/>
          </do_if>
          <do_if value="not $Ware">
            <get_ware_definition result="$wares" tags="[tag.economy]"/>
          </do_if>
          <do_else>
            <set_value name="$wares" exact="@$Ware.resources.list"/>
          </do_else>
          <do_if value="@$wares.count">
            <do_for_each name="$ware_inList" in="$wares">
              <do_if value="not $TiersByWare.{$ware_inList}?">
                <do_if value="@$ware_inList.resources.count">
                  <run_actions ref="SetWareTiers" result="$TiersByWare">
                    <param name="TiersByWare" value="$TiersByWare"/>
                    <param name="Ware" value="$ware_inList"/>
                    <param name="DebugIndent" value="$DebugIndent + '    '"/>
                  </run_actions>
                </do_if>
                <do_else>
                  <set_value name="$TiersByWare.{$ware_inList}" exact="0"/>
                  <!-- <debug_text text="$DebugIndent + @$ware_inList + ': ' + @$TiersByWare.{$ware_inList} + ' (no resources but in resources list of ' + $Ware + ')'" chance="100" /> -->
                  <debug_text text="@$ware_inList + ': ' + @$TiersByWare.{$ware_inList} + ' (no resources but in resources list of ' + $Ware + ')'" chance="100"/>
                </do_else>
              </do_if>
            </do_for_each>
            <set_value name="$resourceTier_max" exact="0"/>
            <do_for_each name="$ware_inList" in="$wares">
              <do_if value="$TiersByWare.{$ware_inList} gt $resourceTier_max">
                <set_value name="$resourceTier_max" exact="$TiersByWare.{$ware_inList}"/>
              </do_if>
            </do_for_each>
            <do_if value="$Ware">
              <set_value name="$TiersByWare.{$Ware}" exact="$resourceTier_max + 1"/>
              <set_value name="$isLowTier" exact="           waregroup.agricultural.{$Ware}.exists or           waregroup.energy.{$Ware}.exists or           waregroup.food.{$Ware}.exists or           waregroup.gases.{$Ware}.exists or           waregroup.ice.{$Ware}.exists or           waregroup.minerals.{$Ware}.exists or           waregroup.pharmaceutical.{$Ware}.exists or           waregroup.water.{$Ware}.exists         "/>
              <do_if value="$isLowTier">
                <do_if value="$TiersByWare.{$Ware} gt 3">
                  <set_value name="$TiersByWare.{$Ware}" exact="$TiersByWare.{$Ware} - 1"/>
                </do_if>
              </do_if>
              <do_else>
                <set_value name="$TiersByWare.{$Ware}" exact="$TiersByWare.{$Ware} + 1"/>
                <do_if value="$TiersByWare.{$Ware} gt 5">
                  <set_value name="$TiersByWare.{$Ware}" exact="$TiersByWare.{$Ware} - 1"/>
                </do_if>
              </do_else>
              <!-- <debug_text text="$DebugIndent + @$Ware + ': ' + @$TiersByWare.{$Ware} + ' $isLowTier: ' + $isLowTier" chance="100" /> -->
              <debug_text text="@$Ware + ': ' + @$TiersByWare.{$Ware} + ' $isLowTier: ' + $isLowTier" chance="100"/>
              <do_for_each name="$ware_inList" in="$wares">
                <!-- <debug_text text="$DebugIndent + '    +' + @$ware_inList + ': ' + @$TiersByWare.{$ware_inList}" chance="100" /> -->
                <debug_text text="'    +' + @$ware_inList + ': ' + @$TiersByWare.{$ware_inList}" chance="100"/>
              </do_for_each>
            </do_if>
          </do_if>
          <return value="$TiersByWare"/>
        </do_if>
        <do_elseif value="{5554302,3} == 'wiki'">
          <get_ware_definition result="$wares" tags="[tag.economy]"/>
          <set_value name="$TiersByWare" exact="table[]"/>
          <do_for_each in="$wares">
            <do_if value="waregroup.agricultural.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="1"/>
            </do_if>
            <do_elseif value="waregroup.energy.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="0"/>
            </do_elseif>
            <do_elseif value="waregroup.food.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="2"/>
            </do_elseif>
            <do_elseif value="waregroup.gases.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="0"/>
            </do_elseif>
            <do_elseif value="loop.element == ware.scanningarrays" comment="Wiki Tier is 5, but its in the hightech group with tier 4">
              <set_value name="$TiersByWare.{loop.element}" exact="5"/>
            </do_elseif>
            <do_elseif value="waregroup.hightech.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="4"/>
            </do_elseif>
            <do_elseif value="waregroup.ice.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="0"/>
            </do_elseif>
            <do_elseif value="waregroup.minerals.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="0"/>
            </do_elseif>
            <do_elseif value="waregroup.pharmaceutical.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="2"/>
            </do_elseif>
            <do_elseif value="waregroup.refined.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="3"/>
            </do_elseif>
            <do_elseif value="loop.element == ware.smartchips" comment="Wiki Tier is 4, but its in the shiptech group with tier 5">
              <set_value name="$TiersByWare.{loop.element}" exact="4"/>
            </do_elseif>
            <do_elseif value="waregroup.shiptech.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="5"/>
            </do_elseif>
            <do_elseif value="waregroup.weapontech.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="6"/>
            </do_elseif>
            <do_elseif value="waregroup.water.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="0"/>
            </do_elseif>
            <!-- Below here are the final equipment Products -->
            <do_elseif value="waregroup.ships_argon.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="7"/>
            </do_elseif>
            <do_elseif value="waregroup.ships_paranid.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="7"/>
            </do_elseif>
            <do_elseif value="waregroup.ships_teladi.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="7"/>
            </do_elseif>
            <do_elseif value="waregroup.ships_split.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="7"/>
            </do_elseif>
            <do_elseif value="waregroup.ships_terran.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="7"/>
            </do_elseif>
            <do_elseif value="waregroup.drones.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="6"/>
            </do_elseif>
            <do_elseif value="waregroup.countermeasures.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="6"/>
            </do_elseif>
            <do_elseif value="waregroup.engines.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="6"/>
            </do_elseif>
            <do_elseif value="waregroup.missiles.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="6"/>
            </do_elseif>
            <do_elseif value="waregroup.shields.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="6"/>
            </do_elseif>
            <do_elseif value="waregroup.software.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="6"/>
            </do_elseif>
            <do_elseif value="waregroup.thrusters.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="6"/>
            </do_elseif>
            <do_elseif value="waregroup.turrets.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="6"/>
            </do_elseif>
            <do_elseif value="waregroup.weapons.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="6"/>
            </do_elseif>
          </do_for_each>
          <return value="$TiersByWare"/>
        </do_elseif>
        <do_else>
          <get_ware_definition result="$wares" tags="[tag.economy]"/>
          <set_value name="$TiersByWare" exact="table[]"/>
          <do_for_each in="$wares">
            <do_if value="waregroup.agricultural.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="5"/>
              <!-- 1 -->
            </do_if>
            <do_elseif value="waregroup.energy.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="1"/>
              <!-- 0 -->
            </do_elseif>
            <do_elseif value="waregroup.food.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="6"/>
              <!-- 2 -->
            </do_elseif>
            <do_elseif value="waregroup.gases.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="0"/>
              <!-- 0 -->
            </do_elseif>
            <do_elseif value="waregroup.hightech.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="3"/>
              <!-- 4 -->
            </do_elseif>
            <do_elseif value="waregroup.ice.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="0"/>
              <!-- 0 -->
            </do_elseif>
            <do_elseif value="waregroup.minerals.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="0"/>
              <!-- 0 -->
            </do_elseif>
            <do_elseif value="waregroup.pharmaceutical.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="7"/>
              <!-- 2 -->
            </do_elseif>
            <do_elseif value="waregroup.refined.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="2"/>
              <!-- 3 -->
            </do_elseif>
            <do_elseif value="waregroup.shiptech.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="4"/>
              <!-- 5 -->
            </do_elseif>
            <do_elseif value="waregroup.weapontech.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="3"/>
              <!-- 6 -->
            </do_elseif>
            <do_elseif value="waregroup.water.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="2"/>
              <!-- 0 -->
            </do_elseif>
            <!-- Below here are the final equipment Products -->
            <do_elseif value="waregroup.ships_argon.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="9"/>
              <!-- 7 -->
            </do_elseif>
            <do_elseif value="waregroup.ships_paranid.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="9"/>
              <!-- 7 -->
            </do_elseif>
            <do_elseif value="waregroup.ships_teladi.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="9"/>
              <!-- 7 -->
            </do_elseif>
            <do_elseif value="waregroup.ships_split.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="9"/>
              <!-- 7 -->
            </do_elseif>
            <do_elseif value="waregroup.ships_terran.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="9"/>
              <!-- 7 -->
            </do_elseif>
            <do_elseif value="waregroup.drones.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="8"/>
              <!-- 6 -->
            </do_elseif>
            <do_elseif value="waregroup.countermeasures.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="8"/>
              <!-- 6 -->
            </do_elseif>
            <do_elseif value="waregroup.engines.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="8"/>
              <!-- 6 -->
            </do_elseif>
            <do_elseif value="waregroup.missiles.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="8"/>
              <!-- 6 -->
            </do_elseif>
            <do_elseif value="waregroup.shields.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="8"/>
              <!-- 6 -->
            </do_elseif>
            <do_elseif value="waregroup.software.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="8"/>
              <!-- 6 -->
            </do_elseif>
            <do_elseif value="waregroup.thrusters.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="8"/>
              <!-- 6 -->
            </do_elseif>
            <do_elseif value="waregroup.turrets.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="8"/>
              <!-- 6 -->
            </do_elseif>
            <do_elseif value="waregroup.weapons.{loop.element}.exists">
              <set_value name="$TiersByWare.{loop.element}" exact="8"/>
              <!-- 6 -->
            </do_elseif>
          </do_for_each>
          <return value="$TiersByWare"/>
        </do_else>
      </actions>
    </library>
  </cues>
</mdscript>
